openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users
servers:
  - url: http://localhost:5000
paths:
  /register:
    post:
      summary: Register a new user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              example:
                name: John Doe
                email: johndoe@example.com
                password: password123
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  userId:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '400':
          description: Missing required fields
        '500':
          description: Error registering user

  /login:
    post:
      summary: Authenticate a user
      tags: [Users]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: johndoe@example.com
                password: password123
      responses:
        '200':
          description: Authentication successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  accessToken:
                    type: string
                  refreshToken:
                    type: string
        '400':
          description: Missing required fields or invalid credentials
        '500':
          description: Error authenticating user

  /users:
    get:
      summary: Retrieve a list of all users
      tags: [Users]
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    email:
                      type: string
        '500':
          description: Error retrieving users

  /users/{id}:
    get:
      summary: Retrieve a user by ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  email:
                    type: string
        '404':
          description: User not found
        '500':
          description: Error retrieving user

    delete:
      summary: Delete a user by ID
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Error deleting user

  /users/{id}/password:
    patch:
      summary: Update a user's password
      tags: [Users]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - newPassword
              properties:
                newPassword:
                  type: string
              example:
                newPassword: newpassword123
      responses:
        '200':
          description: Password updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: New password is required
        '500':
          description: Error updating password

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: []
